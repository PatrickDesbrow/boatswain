apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{ .Values.packageId }}-{{ .Values.MedBridge.Name  }}"
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  replicas: {{ .Values.MedBridge.Replicas }}
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: "{{ .Values.packageId }}-{{ .Values.MedBridge.Name  }}"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: "{{ .Values.packageId }}-{{ .Values.MedBridge.Name }}"
        deploymentRefresh: "0"
        networkpolicy_datauser: ace
        networkpolicy_datauser_hierarchy: hierarchy
        networkpolicy_datauser_medbridge: medbridge
        networkpolicy_datauser_medflix:	medflix
        networkpolicy_datauser_reporting: reporting
        networkpolicy_datauser_patientservice: patientservice
        networkpolicy_datauser_logstash: logstash
        networkpolicy_ingress: expose
      annotations:

        #################################### Init Containers ######################################
        #######
        #######     Summary of init containers:
        #######
        #######    * init-source pulls the source code image and drops it
        #######      into a shared "source" volume (not run in dev environment)
        #######
        #######    * init-ownership gives ownership of the source code
        #######      directory to www-data (not run in dev environment)
        #######
        #######    * init-migrations runs migrations
        #######
        ############################################################################################

        pod.beta.kubernetes.io/init-containers: '[

        {{ if not .Values.MedBridge.Persistence.Source.HostPath }}

        {
              "name": "init-mount-source",
              "imagePullPolicy": "IfNotPresent",
              "image": "{{ .Values.MedBridge.Images.Source.Image }}:{{ or .Values.MedBridge.Images.Source.ImageTag .Values.MedBridge.ImageTag }}",
              "command": [
                "cp",
                "-R",
                "/var/medbridge",
                "/var/www"
              ],
              "volumeMounts": [{
                "name": "source",
                "mountPath": "/var/www/medbridge"
              }]
          },

          {
              "name": "init-mount-images",
              "imagePullPolicy": "IfNotPresent",
              "image": "{{ .Values.MedBridge.Images.ImageAssets.Image }}:{{ or .Values.MedBridge.Images.ImageAssets.ImageTag .Values.MedBridge.ImageTag }}",
              "command": [
                "cp",
                "-R",
                "/var/images",
                "/var/www/medbridge/httpdocs"
              ],
              "volumeMounts": [{
                "name": "source",
                "mountPath": "/var/www/medbridge"
              }]
          },

          {
              "name": "init-ownership",
              "imagePullPolicy": "IfNotPresent",
              "image": "busybox:1.26",
              "command": [
                "chown",
                "-R",
                "www-data",
                "/var/www/medbridge"
              ],
              "volumeMounts": [{
                "name": "source",
                "mountPath": "/var/www/medbridge"
              }]
          },

        {{ end }}

           {
              "name": "init-migrations",
              "imagePullPolicy": "IfNotPresent",
              "image": "{{ .Values.MedBridge.Images.Migrations.Image }}:{{ or .Values.MedBridge.Images.Migrations.ImageTag .Values.MedBridge.ImageTag }}",
              "command": [
                "php",
                "/var/www/medbridge/httpdocs/index_cli_dev.php",
                "cli_v2",
                "migration",
                "run"
              ],
              "volumeMounts": [{
                  "name": "source",
                  "mountPath": "/var/www/medbridge"
                }],
              "env": [
                {
                  "name": "DB_MEDBRIDGEED_HOST",
                  "value": "{{ .Values.packageId }}-{{ .Values.MedBridge.Env.MEDBRIDGE_ED_DB_HOST }}"
                },
                {
                  "name": "DB_MEDBRIDGEED_HOST_READSLAVE",
                  "value": "{{ .Values.packageId }}-{{ .Values.MedBridge.Env.MEDBRIDGE_ED_READSLAVE_HOST }}"
                },
                {
                  "name": "DB_MEDBRIDGEED_DBNAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "{{ .Values.packageId }}-{{ .Values.MedBridge.Secrets.MedbridgeEdDb.Name  }}",
                      "key": "name"
                    }
                  }
                },
                {
                  "name": "DB_MEDBRIDGEED_USER",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "{{ .Values.packageId }}-{{ .Values.MedBridge.Secrets.MedbridgeEdDb.Name  }}",
                      "key": "user"
                    }
                  }
                },
                {
                  "name": "DB_MEDBRIDGEED_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "{{ .Values.packageId }}-{{ .Values.MedBridge.Secrets.MedbridgeEdDb.Name  }}",
                      "key": "password"
                    }
                  }
                }]
              }
            ]'
    spec:
      containers:

        #################################### Filebeat Container ####################################
        #######
        #######   Collects logs in a shared folder and sends them to the logstash service
        #######
        ############################################################################################

       {{ if .Values.MedBridge.Logging }}
      - image: "191682557156.dkr.ecr.us-east-1.amazonaws.com/medbridge/filebeat:5.2.3"
        imagePullPolicy: "IfNotPresent"
        name: filebeat
        env:
        - name: LOGSTASH_TAG
          value: \"php/nginx\",\"json\",\"medbridge\"
        - name: LOGSTASH_HOST
          value: "{{ .Values.packageId }}-logstash"
        - name: LOGSTASH_PORT
          value: "5044"
        - name: FILEBEAT_LOGPATH
          value: "/var/log/**/*.log"
        volumeMounts:
        - mountPath: /var/log/nginx
          name: nginx-logs
        - mountPath: /var/log/php-fpm
          name: php-logs
        - mountPath: /var/log/php-application-logs
          name: php-application-logs
      {{ end }}

        #################################### Nginx Container #######################################
        #######
        #######   Run nginx server
        #######
        ############################################################################################

      - image: "{{ .Values.MedBridge.Images.Nginx.Image }}:{{ or .Values.MedBridge.Images.Nginx.ImageTag .Values.MedBridge.ImageTag }}"
        imagePullPolicy: IfNotPresent
        name: medbridge-nginx
        ports:
        - containerPort: 80
          protocol: TCP
        env:
          - name: MEDBRIDGE_HOST
            value: localhost
          - name: MEDBRIDGE_PORT
            value: "9000"
        {{ if eq .Values.environment "production" }}
        livenessProbe:
          httpGet:
            path: /api/v3/disciplines
            port: 80
          initialDelaySeconds: 15
          timeoutSeconds: 1
        {{ end }}
        resources:
          requests:
            cpu: {{ .Values.MedBridge.Resources.Nginx.Requests.CPU }}
            memory: {{ .Values.MedBridge.Resources.Nginx.Requests.Memory }}
          limits:
            cpu: {{ .Values.MedBridge.Resources.Nginx.Limits.CPU }}
            memory: {{ .Values.MedBridge.Resources.Nginx.Limits.Memory }}
        volumeMounts:
        - mountPath: /var/log/nginx
          name: nginx-logs
        - name: {{ .Release.Name }}-{{ .Values.MedBridge.Configs.ConfigMaps.Nginx.Name }}
          mountPath: /etc/nginx/conf.d
        - name:  {{ .Release.Name }}-{{ .Values.MedBridge.Configs.ConfigMaps.Nginx.Name }}-sitesavailable
          mountPath: /etc/nginx/sites-available
        - name: sites-enabled
          mountPath: /etc/nginx/sites-enabled
        - name: source
          mountPath: /var/www/medbridge

      #################################### PHP CLI Container ####################################
      #######
      #######   Runs sidecar PHP CLI. Used for unit testing, application CLI commands
      #######
      ############################################################################################

      - image: "{{ .Values.MedBridge.Images.PHPCLI.Image }}:{{ or .Values.MedBridge.Images.PHPCLI.ImageTag .Values.MedBridge.ImageTag }}"
        imagePullPolicy: IfNotPresent
        name: medbridge-phpcli
        env:
          - name: MEDFLIX_HOST
            value: {{ .Values.packageId }}-{{ .Values.MedBridge.Env.MEDFLIX_HOST }}
          - name: ACE_HOST
            value: {{ .Values.packageId }}-{{ .Values.MedBridge.Env.ACE_HOST }}
          - name: HIERARCHY_HOST
            value: {{ .Values.packageId }}-{{ .Values.MedBridge.Env.HIERARCHY_HOST }}
          - name: REPORTING_HOST
            value: {{ .Values.packageId }}-{{ .Values.MedBridge.Env.REPORTING_HOST }}
          - name: PATIENT_SERVICE_HOST
            value: {{ .Values.packageId }}-{{ .Values.MedBridge.Env.PATIENTSERVICE_HOST }}
          - name: DB_MEDBRIDGEED_HOST
            value: {{ .Values.packageId }}-{{ .Values.MedBridge.Env.MEDBRIDGE_ED_DB_HOST }}
          - name: DB_MEDBRIDGEED_HOST_READSLAVE
            value: {{ .Values.packageId }}-{{ .Values.MedBridge.Env.MEDBRIDGE_ED_READSLAVE_HOST }}
          - name: DB_MEDBRIDGEED_DBNAME
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.packageId }}-{{ .Values.MedBridge.Secrets.MedbridgeEdDb.Name  }}"
                key: name
          - name: DB_MEDBRIDGEED_USER
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.packageId }}-{{ .Values.MedBridge.Secrets.MedbridgeEdDb.Name  }}"
                key: user
          - name: DB_MEDBRIDGEED_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.packageId }}-{{ .Values.MedBridge.Secrets.MedbridgeEdDb.Name  }}"
                key: password
        command: ["sleep","infinity"]
        volumeMounts:
            - name: source
              mountPath: /var/www/medbridge

      {{ if .Values.MedBridge.NewRelic.AppName }}

      #################################### NewRelic Daemon #######################################
      #######
      #######   Runs NewRelic daemon
      #######
      ############################################################################################

      - image: "{{ .Values.MedBridge.Images.PHP.Image }}:{{ or .Values.MedBridge.Images.PHP.ImageTag .Values.MedBridge.ImageTag }}"
        imagePullPolicy: IfNotPresent
        name: newrelic-php-daemon
        command:
          - /usr/bin/newrelic-daemon
          - -f
          - -c
          - /etc/newrelic/newrelic.cfg
        ports:
        - containerPort: 33142
          protocol: TCP
        resources: {}
        volumeMounts:
        - name: daemon-config
          mountPath: /etc/newrelic/
        - name: source
          mountPath: /var/www/medbridge

    {{ end }}

    #################################### PHP FPM Container ####################################
    #######
    #######   Runs PHP FPM
    #######
    ############################################################################################

      - image: "{{ .Values.MedBridge.Images.PHP.Image }}:{{ or .Values.MedBridge.Images.PHP.ImageTag .Values.MedBridge.ImageTag }}"
        imagePullPolicy: IfNotPresent
        name: medbridge-phpfpm
        env:
          - name: MEDFLIX_HOST
            value: {{ .Values.packageId }}-{{ .Values.MedBridge.Env.MEDFLIX_HOST }}
          - name: PATIENT_SERVICE_SECURITY_TOKEN
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.packageId }}-patientservice-token"
                key: token
          - name: ACE_HOST
            value: {{ .Values.packageId }}-{{ .Values.MedBridge.Env.ACE_HOST }}
          - name: HIERARCHY_HOST
            value: {{ .Values.packageId }}-{{ .Values.MedBridge.Env.HIERARCHY_HOST }}
          - name: REPORTING_HOST
            value: {{ .Values.packageId }}-{{ .Values.MedBridge.Env.REPORTING_HOST }}
          - name: PATIENT_SERVICE_HOST
            value: {{ .Values.packageId }}-{{ .Values.MedBridge.Env.PATIENTSERVICE_HOST }}
          - name: DB_MEDBRIDGEED_HOST
            value: {{ .Values.packageId }}-{{ .Values.MedBridge.Env.MEDBRIDGE_ED_DB_HOST }}
          - name: DB_MEDBRIDGEED_HOST_READSLAVE
            value: {{ .Values.packageId }}-{{ .Values.MedBridge.Env.MEDBRIDGE_ED_READSLAVE_HOST }}
          - name: DB_MEDBRIDGEED_DBNAME
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.packageId }}-{{ .Values.MedBridge.Secrets.MedbridgeEdDb.Name  }}"
                key: name
          - name: DB_MEDBRIDGEED_USER
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.packageId }}-{{ .Values.MedBridge.Secrets.MedbridgeEdDb.Name  }}"
                key: user
          - name: DB_MEDBRIDGEED_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.packageId }}-{{ .Values.MedBridge.Secrets.MedbridgeEdDb.Name  }}"
                key: password
          - name: AWS_ACCCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-aws
                key: accessKeyId
          - name: AWS_SECRET_ACCCESS_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-aws
                key: secretAccessKey
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-aws
                key: region
          - name: NEWRELIC_PHP_LICENSE
            valueFrom:
              secretKeyRef:
                name: newrelic
                key: license_key
          - name: NEWRELIC_PHP_APPNAME
            value: {{ .Values.MedBridge.NewRelic.AppName }}
          - name: NEWRELIC_PHP_LOGLEVEL
            value: {{ .Values.MedBridge.NewRelic.LogLevel }}
          - name: NEWRELIC_PHP_LOGFILE
            value: {{ .Values.MedBridge.NewRelic.LogFile }}
          - name: APP_ENV
            value: {{ .Values.MedBridge.Env.APP_ENV }}
          - name: XDEBUG_PORT
            value: "{{ .Values.MedBridge.Env.XDEBUG_PORT }}"

        {{ if eq .Values.environment "development" }}
          - name: XDEBUG_HOST
            value: {{ .Values.xdebugHost }}
        {{ end }}
        
        volumeMounts:
            - name: source
              mountPath: /var/www/medbridge
            - name: uploads
              mountPath: /var/www/medbridge/httpdocs/uploads/tmp
            - name: php-logs
              mountPath: /var/log/php-fpm
            - name: php-application-logs
              mountPath: /var/www/medbridge/httpdocs/application/logs
        resources:
          limits:
            cpu: {{ .Values.MedBridge.Resources.PHP.Limits.CPU }}
            memory: {{ .Values.MedBridge.Resources.PHP.Limits.Memory }}
          requests:
            cpu: {{ .Values.MedBridge.Resources.PHP.Requests.CPU }}
            memory: {{ .Values.MedBridge.Resources.PHP.Requests.Memory }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:


      #################################### Source Code Volume ###########################################
      #######
      #######   Used to share code among the containers that need it (phpfpm, phpcli, migrations, nginx)
      #######
      #######    * In non-dev environment, init-source (an init container) uses
      #######      a source code image and drops it into this shared volume
      #######
      #######    * When in dev environment, the source code is mounted using a hostPath volume
      #######
      ###################################################################################################

        - name: source
      {{ if .Values.MedBridge.Persistence.Source.HostPath }}
            path: {{ .Values.MedBridge.Persistence.Source.HostPath }}
      {{ else }}
          emptyDir: {}
      {{ end }}

      #################################### Uploads Volume ##############################################
      #######
      #######   Mounts an temporary emptyDir uploads folder into php-fpm containers
      #######
      ###################################################################################################

        - name: uploads
          emptyDir: {}

       #################################### Container Logs ###############################################
       #######
       #######  emptyDir volumes. We can get away with emptyDir volumes because
       #######  these logs will be routed to the ELK stack (via filebeat container)
       #######  and there is no need to persist them here
       #######
       ###################################################################################################

        - name: nginx-logs
          emptyDir: {}
        - name: php-logs
          emptyDir: {}
        - name: php-application-logs
          emptyDir: {}

       #################################### Application Configs ##########################################
       #######
       #######  nginx & newrelic daemon configs
       #######
       ###################################################################################################

        - name: daemon-config
          configMap:
            name: newrelic-daemon
        - name: {{ .Release.Name }}-{{ .Values.MedBridge.Configs.ConfigMaps.Nginx.Name }}
          configMap:
            name: {{ .Release.Name }}-{{ .Values.MedBridge.Configs.ConfigMaps.Nginx.Name }}
        - name: {{ .Release.Name }}-{{ .Values.MedBridge.Configs.ConfigMaps.Nginx.Name }}-sitesavailable
          configMap:
            name:  {{ .Release.Name }}-{{ .Values.MedBridge.Configs.ConfigMaps.Nginx.Name }}-sitesavailable
        - name: sites-enabled
          configMap:
            name: {{ .Release.Name }}-{{ .Values.MedBridge.Configs.ConfigMaps.Nginx.Name }}-sitesavailable
            items:

       #################################### Sites Enabled #################################################
       #######
       #######  Iterates over sites enabled array.
       #######  Toggle sites included in nginx.etc.nginx.sites-available.configmap.yaml
       #######
       ###################################################################################################

            {{- range .Values.MedBridge.Configs.ConfigMaps.Nginx.SitesEnabled }}
            - key: {{ . }}
              path: {{ . }}
            {{- end }}
