// Copyright Â© 2017 MedBridge Team
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package cmd

import (
	"fmt"
	"os"
	"os/exec"

	"github.com/spf13/cobra"
	"github.com/spf13/viper"
)

var stageDeleteCmd = &cobra.Command{
	Use:   "delete [appnames] [domain]",
	Short: "Delete an application(s) from staging",
	Long: `Delete an application or bundle of applications from staging
	
	`,
	Run: func(cmd *cobra.Command, args []string) {
		RunStageDelete(args)
	},
}

func init() {
	StageCmd.AddCommand(stageDeleteCmd)
}

//needs to:
// delete 
//  * cloudformation stack
//  * ingress
//  * helm deployment
//  * autogenerated values

// boatswain stage delete <domain-name> 'cftest3'
func RunStageDelete(args []string) {
	//TODO: very crude... make this better
	domain := args[0]
	out, err := exec.Command("helm", "delete", domain+"-medbridge").CombinedOutput()
	if err != nil {
		fmt.Printf("%s", err)
	} else {
		fmt.Printf("%s", out)
	}

	out, err = exec.Command("kubectl", "delete", "ing", domain+".k8staging.medbridgeeducation.com").CombinedOutput()
	if err != nil {
		fmt.Printf("%s", err)
	} else {
		fmt.Printf("%s", out)
	}
	path := viper.GetString("release")
	stagingFile := path + "/medbridge/autogenerated/values.staging." + domain + ".yaml"
	err = os.Remove(stagingFile)
	if err != nil {
		panic(err)
	}
}

